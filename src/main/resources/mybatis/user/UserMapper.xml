<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hz.app.user.dao.UserDao">
  <sql id="userParam">
      	user_id         ,  
		user_nickname   ,    
		user_img         ,  
		user_login_name   ,  
		user_login_pwd    ,
		user_mob           ,  
		user_email          ,   
		user_real_name      ,
		user_industry        ,
		user_company_name    ,
		user_company_address  ,
		user_education    ,
		user_id_card       ,  
		user_core          ,
		user_schoole        ,   
		user_admission_time  ,   
		user_graduation_time ,
		user_education_type  ,
		user_status   ,
		is_check,
		user_xinyong_score,
		user_yajin_amount,
		user_sex as sex,
		IF(user_id_card='',0,1) is_authentication       
  
  
  </sql>
    <select id="searchUserByLoginName"  resultType="com.hz.app.user.vo.UserVO" parameterType="String">
    	select 
    		<include refid="userParam"/>
    	from 
    		sz_user
    	where 
    		user_login_name = #{loginName}
    </select>
	<select id="searchUserById"  resultType="com.hz.app.user.vo.UserVO" parameterType="Map">
    	select 
    		<include refid="userParam"/>
    	from 
    		sz_user
    	where 
    		user_id = #{user_id}
    </select>
	
	<insert id="registerUser" parameterType="Map">
	<selectKey resultType="java.lang.Long" order="AFTER" keyProperty="user_id">
	SELECT LAST_INSERT_ID() AS user_id
	</selectKey>
		insert  into `sz_user`(`user_nickname`,`user_img`,`user_login_name`,`user_login_pwd`,`user_mob`,`user_email`,`user_real_name`,`user_industry`,`user_company_name`,`user_company_address`,`user_education`,`user_id_card`,`user_core`,`user_schoole`,`user_admission_time`,`user_graduation_time`,`user_education_type`,`user_status`) 
			values
	 	(#{userNickname},'',#{user_mob},#{password},#{user_mob},'','','','','','','',0,'','','','',0)		
	</insert>
    <select id="searchUserCheck"  resultType="Map" parameterType="com.hz.app.user.vo.UserVO">
  		SELECT user_check_time AS check_time 
  		FROM sz_user
  		WHERE user_id = #{user_id} 
    </select>
	
	<update id="updatePassword"  parameterType="Map">
		update sz_user set user_login_pwd = #{new_password} where user_mob = #{user_mob}
	</update>
	<update id="updateUserIdCardById"  parameterType="Map">
		update sz_user set user_real_name = #{user_real_name},user_id_card=#{user_id_card},user_sex=#{user_sex} where user_id = #{user_id}
	</update>

	<update id="updateNickname"  parameterType="Map">
		update sz_user set user_nickname = #{user_nickname} where user_id = #{user_id}
	</update>
	
	<update id="updateMobile"  parameterType="Map">
		update sz_user set user_mob = #{new_mobile},user_login_name= #{new_mobile} where user_id = #{user_id}
	</update>
	
	<update id="updateUser"  parameterType="Map">
		UPDATE sz_user SET
			<if test="user_education!='' and user_education!=null and user_admission_time!='' and user_admission_time!=null and user_graduation_time!='' and user_graduation_time!=null  and user_schoole!='' and user_schoole!=null">
				user_education=#{user_education},
				user_admission_time=#{user_admission_time},
				user_graduation_time=#{user_graduation_time},
				user_education_type=#{user_education_type},
				user_schoole=#{user_schoole},
			</if>
			
			<if test="user_company_address !='' and user_company_address !=null and user_company_name !='' and user_company_name !=null and user_industry !='' and user_industry !=null">
				user_industry=#{user_industry},
				user_company_name=#{user_company_name},
				user_company_address=#{user_company_address},
			</if>

			<if test="user_emergency_contact_name !='' and user_emergency_contact_name !=null and user_emergency_contact_mobile !='' and user_emergency_contact_mobile !=null and user_emergency_contact_type !='' and user_emergency_contact_type !=null">			
				user_emergency_contact_name=#{user_emergency_contact_name},
				user_emergency_contact_mobile=#{user_emergency_contact_mobile},
				user_emergency_contact_type=#{user_emergency_contact_type},
			</if>
			user_id = #{user_id}
		WHERE user_id = #{user_id}
	</update>
	<!-- 获取信用纬度分值（信用总分=各维度信用分之和）S0049 -->
	<select id="getCreditDimension" parameterType="Map" resultType="Map">	
		SELECT * FROM sz_user_score_info WHERE user_id=#{user_id}
	</select>
	<update id="udateUserImg"  parameterType="Map">
		update sz_user set user_img = #{user_img} where user_id = #{user_id}
	</update>
	<!-- 跟新用户信用分 -->
	<update id="updateUserXinyong"  parameterType="Map">
		update sz_user set user_xinyong_score = user_xinyong_score+#{xinyong} where user_id = #{user_id}
	</update>
	
		<!-- 跟新用户信用分记录 -->
	<update id="updateUserXinyonginfo"  parameterType="Map">
		update sz_user_score_info 
		set  user_score_info_credit1 = #{user_score_info_credit1} ,
		user_score_info_credit2 = #{user_score_info_credit2},
		user_score_info_credit3 = #{user_score_info_credit3},
		user_score_info_credit4 = #{user_score_info_credit4},
		user_score_info_credit5 = #{user_score_info_credit5},
		user_score_info_credit6 = #{user_score_info_credit6}
		where user_score_info_id = #{user_score_info_id}
	</update>
	<!-- 查询用户当前时候还有正在进行的租房订单 -->
	<select id="searchUserOrderNow" resultType="Map">			
		SELECT understand_sign_user_id as user_id FROM sz_understand_sign
		WHERE understand_sign_status = 2 AND understand_sign_maturity_time >=  NOW() 
		GROUP BY understand_sign_user_id
	</select>
	
		<!-- 跟新用户信用分 和 租住时长 -->
	<update id="updateUserXinyongAndOrderTime"  parameterType="Map">
		update sz_user set user_xinyong_score = user_xinyong_score+#{xinyong},user_check_time=user_check_time+#{time} where user_id = #{user_id}
	</update>
	
		<!-- 查询逾期账单 -->
	<select id="searchOrderBill" resultType="Map">			
		SELECT user_id FROM sz_user_bill_info 
		WHERE DATE_ADD(user_bill_pay_day, INTERVAL 3 DAY)=NOW()
		GROUP BY user_id
	</select>
	<insert id="createUserScoreInfo" parameterType="Map">
	INSERT INTO  sz_user_score_info(user_id,user_score_info_credit1,user_score_info_credit2,user_score_info_credit3,user_score_info_credit4,user_score_info_credit5,user_score_info_credit6)
VALUE(#{user_id},0,0,0,0,0,0)
	</insert>

	
</mapper>